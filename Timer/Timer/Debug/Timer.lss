
Timer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000019c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000128  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800100  00800100  0000019c  2**0
                  ALLOC
  3 .comment      00000011  00000000  00000000  0000019c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001b0  2**2
                  CONTENTS, READONLY
  5 .debug_info   000005f4  00000000  00000000  000001f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005a2  00000000  00000000  000007e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000001a  00000000  00000000  00000d86  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000208  00000000  00000000  00000da0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__vector_14>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a2 30       	cpi	r26, 0x02	; 2
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 48 00 	call	0x90	; 0x90 <main>
  88:	0c 94 92 00 	jmp	0x124	; 0x124 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <main>:
  90:	0e 94 7a 00 	call	0xf4	; 0xf4 <timer_set_micros>
  94:	25 9a       	sbi	0x04, 5	; 4
  96:	00 e0       	ldi	r16, 0x00	; 0
  98:	10 e0       	ldi	r17, 0x00	; 0
  9a:	0e 94 85 00 	call	0x10a	; 0x10a <timer_get_micros>
  9e:	ec 01       	movw	r28, r24
  a0:	9c 01       	movw	r18, r24
  a2:	20 1b       	sub	r18, r16
  a4:	31 0b       	sbc	r19, r17
  a6:	24 36       	cpi	r18, 0x64	; 100
  a8:	31 05       	cpc	r19, r1
  aa:	28 f4       	brcc	.+10     	; 0xb6 <main+0x26>
  ac:	22 33       	cpi	r18, 0x32	; 50
  ae:	31 05       	cpc	r19, r1
  b0:	a0 f3       	brcs	.-24     	; 0x9a <main+0xa>
  b2:	2d 98       	cbi	0x05, 5	; 5
  b4:	f2 cf       	rjmp	.-28     	; 0x9a <main+0xa>
  b6:	2d 9a       	sbi	0x05, 5	; 5
  b8:	0e 94 85 00 	call	0x10a	; 0x10a <timer_get_micros>
  bc:	8c 01       	movw	r16, r24
  be:	9e 01       	movw	r18, r28
  c0:	28 1b       	sub	r18, r24
  c2:	39 0b       	sbc	r19, r25
  c4:	f3 cf       	rjmp	.-26     	; 0xac <main+0x1c>

000000c6 <__vector_14>:
  c6:	1f 92       	push	r1
  c8:	0f 92       	push	r0
  ca:	0f b6       	in	r0, 0x3f	; 63
  cc:	0f 92       	push	r0
  ce:	11 24       	eor	r1, r1
  d0:	8f 93       	push	r24
  d2:	9f 93       	push	r25
  d4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
  d8:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
  dc:	01 96       	adiw	r24, 0x01	; 1
  de:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
  e2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
  e6:	9f 91       	pop	r25
  e8:	8f 91       	pop	r24
  ea:	0f 90       	pop	r0
  ec:	0f be       	out	0x3f, r0	; 63
  ee:	0f 90       	pop	r0
  f0:	1f 90       	pop	r1
  f2:	18 95       	reti

000000f4 <timer_set_micros>:
  f4:	82 e0       	ldi	r24, 0x02	; 2
  f6:	84 bd       	out	0x24, r24	; 36
  f8:	93 e0       	ldi	r25, 0x03	; 3
  fa:	95 bd       	out	0x25, r25	; 37
  fc:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
 100:	81 e0       	ldi	r24, 0x01	; 1
 102:	87 bd       	out	0x27, r24	; 39
 104:	78 94       	sei
 106:	16 bc       	out	0x26, r1	; 38
 108:	08 95       	ret

0000010a <timer_get_micros>:
 10a:	f8 94       	cli
 10c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 110:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 114:	78 94       	sei
 116:	88 0f       	add	r24, r24
 118:	99 1f       	adc	r25, r25
 11a:	88 0f       	add	r24, r24
 11c:	99 1f       	adc	r25, r25
 11e:	88 0f       	add	r24, r24
 120:	99 1f       	adc	r25, r25
 122:	08 95       	ret

00000124 <_exit>:
 124:	f8 94       	cli

00000126 <__stop_program>:
 126:	ff cf       	rjmp	.-2      	; 0x126 <__stop_program>
